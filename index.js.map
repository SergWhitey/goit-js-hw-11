{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["import axios from 'axios';\nimport iziToast from 'izitoast';\nimport SimpleLightbox from 'simplelightbox';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst API_KEY = '45735019-5668e0368fbdb80eca42c52b3';\nconst API_URL = 'https://pixabay.com/api/';\n\nconst form = document.getElementById('search-form');\nconst input = document.getElementById('search-input');\nconst gallery = document.getElementById('gallery');\nconst loading = document.getElementById('loading');\n\nform.addEventListener('submit', async (event) => {\n    event.preventDefault();\n    const query = input.value.trim();\n\n    if (!query) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Search field cannot be empty!',\n        });\n        return;\n    }\n\n    loading.style.display = 'block';\n    gallery.innerHTML = '';\n\n    try {\n        const response = await axios.get(API_URL, {\n            params: {\n                key: API_KEY,\n                q: query,\n                image_type: 'photo',\n                orientation: 'horizontal',\n                safesearch: true,\n            }\n        });\n\n        const { hits } = response.data;\n\n        if (hits.length === 0) {\n            iziToast.warning({\n                title: 'No results',\n                message: 'Sorry, there are no images matching your search query. Please try again!',\n            });\n        } else {\n            hits.forEach(hit => {\n                const card = document.createElement('a');\n                card.classList.add('card');\n                card.href = hit.largeImageURL;\n                card.dataset.caption = `\n                    <p>Likes: ${hit.likes}</p>\n                    <p>Views: ${hit.views}</p>\n                    <p>Comments: ${hit.comments}</p>\n                    <p>Downloads: ${hit.downloads}</p>\n                `;\n                card.innerHTML = `\n                    <img src=\"${hit.webformatURL}\" alt=\"${hit.tags}\">\n                    <div class=\"card-info\">${hit.tags}</div>\n                `;\n                gallery.appendChild(card);\n            });\n\n            const lightbox = new SimpleLightbox('.gallery a', {\n                captionsData: 'data-caption',\n                captionDelay: 250\n            });\n\n            lightbox.refresh();\n        }\n    } catch (error) {\n        iziToast.error({\n            title: 'Error',\n            message: 'Something went wrong. Please try again later.',\n        });\n    } finally {\n        loading.style.display = 'none';\n    }\n});"],"names":["API_KEY","API_URL","form","input","gallery","loading","event","query","iziToast","response","axios","hits","hit","card","SimpleLightbox"],"mappings":"owBAMA,MAAMA,EAAU,qCACVC,EAAU,2BAEVC,EAAO,SAAS,eAAe,aAAa,EAC5CC,EAAQ,SAAS,eAAe,cAAc,EAC9CC,EAAU,SAAS,eAAe,SAAS,EAC3CC,EAAU,SAAS,eAAe,SAAS,EAEjDH,EAAK,iBAAiB,SAAU,MAAOI,GAAU,CAC7CA,EAAM,eAAc,EACpB,MAAMC,EAAQJ,EAAM,MAAM,KAAI,EAE9B,GAAI,CAACI,EAAO,CACRC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,+BACrB,CAAS,EACD,MACH,CAEDH,EAAQ,MAAM,QAAU,QACxBD,EAAQ,UAAY,GAEpB,GAAI,CACA,MAAMK,EAAW,MAAMC,EAAM,IAAIT,EAAS,CACtC,OAAQ,CACJ,IAAKD,EACL,EAAGO,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACf,CACb,CAAS,EAEK,CAAE,KAAAI,CAAI,EAAKF,EAAS,KAEtBE,EAAK,SAAW,EAChBH,EAAS,QAAQ,CACb,MAAO,aACP,QAAS,0EACzB,CAAa,GAEDG,EAAK,QAAQC,GAAO,CAChB,MAAMC,EAAO,SAAS,cAAc,GAAG,EACvCA,EAAK,UAAU,IAAI,MAAM,EACzBA,EAAK,KAAOD,EAAI,cAChBC,EAAK,QAAQ,QAAU;AAAA,gCACPD,EAAI,KAAK;AAAA,gCACTA,EAAI,KAAK;AAAA,mCACNA,EAAI,QAAQ;AAAA,oCACXA,EAAI,SAAS;AAAA,kBAEjCC,EAAK,UAAY;AAAA,gCACDD,EAAI,YAAY,UAAUA,EAAI,IAAI;AAAA,6CACrBA,EAAI,IAAI;AAAA,kBAErCR,EAAQ,YAAYS,CAAI,CACxC,CAAa,EAEgB,IAAIC,EAAe,aAAc,CAC9C,aAAc,eACd,aAAc,GAC9B,CAAa,EAEQ,QAAO,EAEvB,MAAe,CACZN,EAAS,MAAM,CACX,MAAO,QACP,QAAS,+CACrB,CAAS,CACT,QAAc,CACNH,EAAQ,MAAM,QAAU,MAC3B,CACL,CAAC"}